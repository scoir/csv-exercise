// Code generated by MockGen. DO NOT EDIT.
// Source: etl.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFormatInterface is a mock of FormatInterface interface
type MockFormatInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFormatInterfaceMockRecorder
}

// MockFormatInterfaceMockRecorder is the mock recorder for MockFormatInterface
type MockFormatInterfaceMockRecorder struct {
	mock *MockFormatInterface
}

// NewMockFormatInterface creates a new mock instance
func NewMockFormatInterface(ctrl *gomock.Controller) *MockFormatInterface {
	mock := &MockFormatInterface{ctrl: ctrl}
	mock.recorder = &MockFormatInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFormatInterface) EXPECT() *MockFormatInterfaceMockRecorder {
	return m.recorder
}

// GetFileExtension mocks base method
func (m *MockFormatInterface) GetFileExtension() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileExtension")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileExtension indicates an expected call of GetFileExtension
func (mr *MockFormatInterfaceMockRecorder) GetFileExtension() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileExtension", reflect.TypeOf((*MockFormatInterface)(nil).GetFileExtension))
}

// FirstRecord mocks base method
func (m *MockFormatInterface) FirstRecord() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FirstRecord")
	ret0, _ := ret[0].(string)
	return ret0
}

// FirstRecord indicates an expected call of FirstRecord
func (mr *MockFormatInterfaceMockRecorder) FirstRecord() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FirstRecord", reflect.TypeOf((*MockFormatInterface)(nil).FirstRecord))
}

// StandardRecord mocks base method
func (m *MockFormatInterface) StandardRecord() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StandardRecord")
	ret0, _ := ret[0].(string)
	return ret0
}

// StandardRecord indicates an expected call of StandardRecord
func (mr *MockFormatInterfaceMockRecorder) StandardRecord() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StandardRecord", reflect.TypeOf((*MockFormatInterface)(nil).StandardRecord))
}

// TerminatingString mocks base method
func (m *MockFormatInterface) TerminatingString() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TerminatingString")
	ret0, _ := ret[0].(string)
	return ret0
}

// TerminatingString indicates an expected call of TerminatingString
func (mr *MockFormatInterfaceMockRecorder) TerminatingString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TerminatingString", reflect.TypeOf((*MockFormatInterface)(nil).TerminatingString))
}
